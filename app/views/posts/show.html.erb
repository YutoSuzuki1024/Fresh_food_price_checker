<div>
	<h2>口コミ詳細</h2>
</div>

<div>
	<table class="table table-bordered">
		<thead>
			<tr>
				<th>商品名</th>
				<th>投稿日時</th>
				<th>価格</th>
				<th>コメント</th>
				<th></th>
				<th></th>
			</tr>
		</thead>
		<tbody>
				<tr>
					<td>
						<%= image_tag @item.item_image.confirm.url %>
						<%= @item.name %>
					</td>
					<td><%= @post.updated_at.to_s(:datetime_jp) %></td>
					<td>
						<%= @post.price_status_i18n %>　
						¥ <%= @post.price %>
					</td>
					<td>
						<%= @post.comment %><br>
						主な利用店舗：　<%= @post.shop_name %>
					</td>
					<td>
						<%= @member.age_i18n %>
						<%= @member.sex_i18n %>
					</td>
					<td>いいねボタン</td>
				</tr>
		</tbody>
	</table>
</div>


<div>
	<p>主な利用店舗　地図</p>
</div>

<div id="map"></div>

<style>
	#map{
		height: 600px;
		width: 800px;
	}
</style>

<script type="text/javascript">
	let map;
	let service;
	let infowindow;

	function initMap() {
	  const sydney = new google.maps.LatLng(-33.867, 151.195);
	  infowindow = new google.maps.InfoWindow();
	  map = new google.maps.Map(document.getElementById("map"), {
	    center: sydney,
	    zoom: 15,
	  });
	  const request = {
	    query: "<%= @post.shop_name %>",
	    fields: ["name", "geometry"],
	  };
	  service = new google.maps.places.PlacesService(map);
	  service.findPlaceFromQuery(request, (results, status) => {
	    if (status === google.maps.places.PlacesServiceStatus.OK) {
	      for (let i = 0; i < results.length; i++) {
	        createMarker(results[i]);
	      }
	      map.setCenter(results[0].geometry.location);
	    }
	  });
	}

	function createMarker(place) {
	  const marker = new google.maps.Marker({
	    map,
	    position: place.geometry.location,
	  });
	  google.maps.event.addListener(marker, "click", () => {
	    infowindow.setContent(place.name);
	    infowindow.open(map);
	  });
	}
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_API_KEY'] %>&libraries=places&callback=initMap">
</script>

